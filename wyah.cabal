cabal-version:       3.0
name:                wyah
version:             0.1.0.0
synopsis:            Write you a haskell (notes, examples)
description:         My notes and examples to the Write You a Haskell book by Stephen Diehl
-- bug-reports:
license:             MIT
license-file:        LICENSE
author:              Vasiliy Yorkin
maintainer:          vasiliy.yorkin@gmail.com
copyright:           2020 Vasiliy Yorkin
-- category:
build-type:          Simple
extra-source-files:  README.md
tested-with:         GHC == 8.8.3

source-repository head
  type:                git
  location:            https://github.com/vyorkin/wyah.git

common base
  build-depends:       base
  default-language:    Haskell2010
  default-extensions:  ConstraintKinds
                       DeriveGeneric
                       GeneralizedNewtypeDeriving
                       InstanceSigs
                       KindSignatures
                       LambdaCase
                       OverloadedStrings
                       RecordWildCards
                       ScopedTypeVariables
                       StandaloneDeriving
                       TupleSections
                       TypeApplications
                       ViewPatterns
                       NoStarIsType
                       BlockArguments

library
  import:              base
  hs-source-dirs:      src
  exposed-modules:     Wyah
                       Wyah.Chapter4
                         Wyah.Chapter4.Syntax
                         Wyah.Chapter4.Pretty
                         Wyah.Chapter4.Eval

                       Wyah.Chapter5
                         Wyah.Chapter5.Calc.Syntax
                         Wyah.Chapter5.Calc.Type
                         Wyah.Chapter5.Calc.Eval
                         Wyah.Chapter5.Calc.Check
                         Wyah.Chapter5.Calc.Lexer
                         Wyah.Chapter5.Calc.Parser
                         Wyah.Chapter5.Calc.Pretty
                         Wyah.Chapter5.Calc.REPL

                         Wyah.Chapter5.STLC.Syntax
                         Wyah.Chapter5.STLC.Types
                         Wyah.Chapter5.STLC.Env
                         Wyah.Chapter5.STLC.Eval
                         Wyah.Chapter5.STLC.Pretty
                         Wyah.Chapter5.STLC.Pretty.Style
                         Wyah.Chapter5.STLC.Lexer
                         Wyah.Chapter5.STLC.Parser
                         Wyah.Chapter5.STLC.Check
                         Wyah.Chapter5.STLC.REPL

                         Wyah.Chapter6.Lazy
                         Wyah.Chapter6.HOAS
                         Wyah.Chapter6.PHOAS
                         Wyah.Chapter6.IO

                         Wyah.Chapter7.Type
                         Wyah.Chapter7.Syntax
                         Wyah.Chapter7.Lexer
                         Wyah.Chapter7.Parser
                         Wyah.Chapter7.Pretty
                           Wyah.Chapter7.Pretty.Style
                           Wyah.Chapter7.Pretty.Utils
                         Wyah.Chapter7.Ctx
                         Wyah.Chapter7.TypeEnv
                         Wyah.Chapter7.Infer
                           Wyah.Chapter7.Infer.Types
                           Wyah.Chapter7.Infer.Subst
                         Wyah.Chapter7.Eval
                         Wyah.Chapter7.REPL

                       Sandbox.Prettyprint1

  build-depends:       base
                     , text
                     , utf8-string
                     , bytestring
                     , containers
                     , mtl
                     , prettyprinter
                     , prettyprinter-ansi-terminal
                     -- programs (lexers) produced by alex use array package
                     , array
                     , typed-process
                     , repline

  build-tool-depends:  alex:alex
                     , happy:happy

  ghc-options:         -Wall
                       -Wincomplete-uni-patterns
                       -Wincomplete-record-updates
                       -Wcompat
                       -Widentities
                       -Wredundant-constraints
                       -fhide-source-paths
                       -Wpartial-fields

executable wyah
  import:              base
  hs-source-dirs:      app
  main-is:             Main.hs
  build-depends:       base
                     , wyah
  ghc-options:         -Wall
                       -threaded
                       -rtsopts
                       -with-rtsopts=-N
                       -Wincomplete-uni-patterns
                       -Wincomplete-record-updates
                       -Wcompat
                       -Widentities
                       -Wredundant-constraints
                       -fhide-source-paths
                       -Wpartial-fields

test-suite wyah-test
  import:              base
  type:                exitcode-stdio-1.0
  build-depends:       wyah
                     , text
                     , bytestring
                     , Glob
                     , prettyprinter
                     , filepath
                     , hedgehog
                     , tasty
                     , tasty-discover
                     , tasty-golden
                     , tasty-expected-failure
                     , tasty-hedgehog
                     , doctest
  build-tool-depends:  tasty-discover:tasty-discover
  hs-source-dirs:      test
  other-modules:       Wyah.Support
                     , Wyah.Chapter7.ParserTest
                     , Wyah.Chapter7.PrettyTest
                     , Wyah.Chapter7.EvalTest
                     , Wyah.Chapter7.InferTest
  main-is:             Driver.hs
  ghc-options:         -Wall
                       -threaded
                       -rtsopts
                       -with-rtsopts=-N
                       -Wincomplete-uni-patterns
                       -Wincomplete-record-updates
                       -Wcompat
                       -Widentities
                       -Wredundant-constraints
                       -fhide-source-paths
                       -Wmissing-export-lists
                       -Wpartial-fields
                       -Wmissing-home-modules
                       -- Our test convention for HUnit would make it
                       -- unnecessarily verbose to add the signature of each test
                       -fno-warn-missing-signatures
                       -- Delegate to Tasty to discover tests
                       -fno-warn-missing-export-lists
