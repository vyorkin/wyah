let sub = \m -> \n -> (n pred) m;
let ack = \m -> (m (\f -> \n -> (n f) (f one))) succ;
let pred = \n -> \f -> \x -> ((n (\g -> \h -> h (g f))) (\u -> x)) I;
let pow = \m -> \n -> n m;
let mult = \m -> \n -> \f -> m (n f);
let plus = \m -> \n -> \f -> \x -> (n f) ((m f) x);
let iszero = \n -> (n (\x -> F)) T;