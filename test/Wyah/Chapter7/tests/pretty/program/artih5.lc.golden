let sub = \n -> \m -> (n pred) m;
let ack = \m -> (m (\f -> \n -> (n f) (f one))) succ;
let pred = \x -> \f -> \n -> ((n (\g -> \h -> h (g f))) (\u -> x)) I;
let pow = \n -> \m -> n m;
let mult = \f -> \n -> \m -> m (n f);
let plus = \x -> \f -> \n -> \m -> (n f) ((m f) x);
let iszero = \n -> (n (\x -> F)) T;